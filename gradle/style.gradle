buildscript {
  repositories repos
  dependencies {
    classpath "com.diffplug.spotless:spotless-plugin-gradle:7.2.1"
  }
}

def getHeaderFile = { Project p, String style ->
  def fileName = style == null ? "header.txt" : "header-${style}.txt"
  def paths = [
    "src/license",
    ".",
    p.getRootDir().getPath() + "/gradle/license",
    p.getRootDir().getPath()
  ]
  for (def path : paths) {
    final File file = p.file(path + "/" + fileName);
    if (file.exists()) {
      return file;
    }
  }
  return null
}

/////
// Root project (including buildSrc)
/////

apply plugin: com.diffplug.gradle.spotless.SpotlessPlugin

spotless {
  enforceCheck = false

  java {
    target fileTree(projectDir) {
      // buildSrc java files
      include 'buildSrc/src/*/java/**/*.java'
    }
    googleJavaFormat()
    licenseHeaderFile(getHeaderFile(project, null))
  }
  groovyGradle {
    target fileTree(projectDir) {
      include '*.gradle'
      include 'gradle/*.gradle'
    }
    greclipse()
    leadingTabsToSpaces(2)
    trimTrailingWhitespace()
    endWithNewline()
  }
  format 'misc', {
    target fileTree(projectDir) {
      include '.gitignore'

      include 'documentation/*.yml'
    }
    leadingTabsToSpaces(2)
    trimTrailingWhitespace()
    endWithNewline()
  }
  format 'markdown', {
    target fileTree(projectDir) {
      include '*.md'
      include 'changelogs/*.md'
      include 'documentation/*.md'
    }
    leadingTabsToSpaces(2)
    endWithNewline()
  }
}

/////
// Sub projects
/////

configure(subprojects - project(':axelor-front')) { p ->

  apply plugin: com.diffplug.gradle.spotless.SpotlessPlugin

  spotless {
    enforceCheck = false

    java {
      target fileTree(p.projectDir) {
        include 'src/*/java/**/*.java'
      }
      googleJavaFormat()
      licenseHeaderFile(getHeaderFile(project, null))
    }
    groovyGradle {
      target fileTree(projectDir) {
        include '*.gradle'
        include 'gradle/*.gradle'
      }
      greclipse()
      leadingTabsToSpaces(2)
      trimTrailingWhitespace()
      endWithNewline()
    }
    format("javaInfoFiles") {
      // separate extension due to https://github.com/diffplug/spotless/issues/532
      target fileTree(p.projectDir) {
        include 'src/*/java/**/module-info.java'
        include 'src/*/java/**/package-info.java'
      }

      licenseHeaderFile(getHeaderFile(project, null), "(package|import|module|@|/\\*\\*)")
    }
    format('xsd') {
      target fileTree(p.projectDir) {
        include 'src/**/*.xsd'
      }
      licenseHeaderFile(getHeaderFile(project, "xml"), "<((!DOCTYPE)|[A-Za-z]+)")
          .skipLinesMatching("^<\\?xml.*\\?>\$")
    }
    format('misc') {
      target fileTree(p.projectDir) {
        include 'src/**/*.html'
        include 'src/**/*.js'
        include 'src/**/*.css'
        include 'src/**/*.xml'
        include 'src/**/*.xsd'
        include 'src/**/*.jsp'
        exclude 'src/**/webapp/lib/*'
        if (p.name == 'axelor-tomcat') {
          // Exclude tomcat configs files
          exclude 'src/main/resources/conf/*'
        }
      }
      leadingTabsToSpaces(2)
      trimTrailingWhitespace()
      endWithNewline()
    }
  }
}

/////
// formatCode task
/////

configure([rootProject] + (subprojects - project(':axelor-front'))) {

  tasks.register('formatCode') {
    description = "Add license and format code."
    group = "Axelor"
    dependsOn'spotlessApply'
  }
}
